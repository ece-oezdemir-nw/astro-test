"""
dog_intelligence
DAG auto-generated by Astro Cloud IDE.
"""

from airflow.decorators import dag
from astro import sql as aql
from astro.table import Table, Metadata
import pandas as pd
import pendulum

from airflow import DAG
from airflow.providers.common.sql.operators.sql import SQLExecuteQueryOperator
from airflow.utils.dates import days_ago

@aql.dataframe(task_id="python_1")
def python_1_func():
    # Define default arguments
    default_args = {
        "owner": "airflow",
        "start_date": days_ago(1),
    }
    
    # Define the DAG
    with DAG(
        dag_id="query_dog_intelligence",
        default_args=default_args,
        schedule_interval=None,  # Run manually
        catchup=False,
        tags=["snowflake"],
    ) as dag:
    
        # Task to execute the Snowflake query
        query_task = SQLExecuteQueryOperator(
            task_id="query_dog_intelligence_table",
            conn_id="snowflake_conn",  # Use the actual Snowflake connection ID
            sql='SELECT * FROM "ANALYTICS"."TEST_ECE_OEZDEMIR"."DOG_INTELLIGENCE" LIMIT 10;',
        )
    
        query_task
    

@aql.run_raw_sql(conn_id="snowflake_conn", task_id="sql_1", results_format="pandas_dataframe")
def sql_1_func():
    return """
    SELECT * FROM ANALYTICS.TEST_ECE_OEZDEMIR.DOG_INTELLIGENCE LIMIT 10
    """

@aql.run_raw_sql(conn_id="snowflake_conn", task_id="sql_snowflake_conn", results_format="pandas_dataframe")
def sql_snowflake_conn_func():
    return """
    select 1 dual;
    """

default_args={
    "owner": "ece.oezdemir@new-work.se,Open in Cloud IDE",
}

@dag(
    default_args=default_args,
    schedule="0 0 * * *",
    start_date=pendulum.from_format("2025-03-14", "YYYY-MM-DD").in_tz("UTC"),
    catchup=False,
    owner_links={
        "ece.oezdemir@new-work.se": "mailto:ece.oezdemir@new-work.se",
        "Open in Cloud IDE": "https://cloud.astronomer.io/cm7vpp9790phl01prbv7fjxpq/cloud-ide/cm833k6ig100w01id2fit528c/cm88uelr90zv801n6u0v9f1oj",
    },
)
def dog_intelligence():
    python_1 = python_1_func()

    sql_1 = sql_1_func()

    sql_snowflake_conn = sql_snowflake_conn_func()

    sql_1 << python_1

dag_obj = dog_intelligence()
